# This references the default nginx container  from
# the Docker Hub:https://registry.hub.docker.com/ 
 box: nginx:latest
 
 build:
   # The steps  that will be executed on  build
   # Steps make up the actions in your pipeline
   
   steps:

     # A  custom script step, name value is used in the Wercker-UI
     # and the code value contains the command that get executed
     - script:
         name: installing and testing install of curl
         code: |
           apt-get update
           apt-get install -y curl
# note the indentation, this is still part of the build pipeline
   after-steps:                    
     - slack-notifier:
         url: $SLACK_URL
         username: werckerbot
         channel: notifications
 push-2-docker:
   box: nginx:latest
   
   steps:
     - script:
         name: mv the files required and clean image
         # include to install packages
         # make internals avail for next step
         code: |
           cd $WERCKER_SOURCE_DIR
           mv /pipeline/source/index.html /usr/share/nginx/html
           mv /pipeline/source/linux.png /usr/share/nginx/html
           echo test     
           apt-get update
           apt-get install -y curl

     - internal/docker-push:
         username: $DOCKER_USERNAME
         password: $DOCKER_PASSWORD
         # we want to push both the release image and as the latest
         tag: dev-$WERCKER_GIT_COMMIT latest
         repository: devopscafe/tweet-app
         registry: https://registry.hub.docker.com
         working-dir: /
         ports: 80 4000
         cmd: nginx -g 'daemon off';
 deploy-dev:
   box: google/golang

   steps:
     - script:
         name: get latest tag for deployment
         code: |
           export RELEASE_TAG=`tail $WERCKER_ROOT/generated_tag.txt`
           echo "Release tag: $RELEASE_TAG"
     - script:
         name: debug
         code: |
           echo $WERCKER_OUTPUT_DIR
           ls -l $WERCKER_OUTPUT_DIR
           echo $WERCKER_ROOT
           ls -l $WERCKER_ROOT
     - bash-template:
         cwd: $WERCKER_ROOT/kubernetes/deployment/dev
     - script:
         name: Remove template files
         cwd: $WERCKER_ROOT/kubernetes/deployment/dev
         code: |
           rm *.template.yml
     - script:
         name: debug
         cwd: $WERCKER_ROOT/kubernetes/deployment/dev
         code: |
           ls -l
     - script:
         name: echo tags
         code: |
           cat $WERCKER_ROOT/kubernetes/deployment/dev/deployment.yml
           echo "Docker image and tag: $RELEASE_TAG"
     - kubectl:
         debug: true
         server: $KUBERNETES_MASTER
         username: $KUBERNETES_USERNAME
         password: $KUBERNETES_PASSWORD
         insecure-skip-tls-verify: true
         command: apply
         raw_args:  -f $WERCKER_ROOT/kubernetes/deployment/dev/deployment.yml --namespace $KUBERNETES_NAMESPACE
   after-steps:
     - slack-notifier:
         url: $SLACK_URL
         channel: notifications
         username: werckerbot
        
 
